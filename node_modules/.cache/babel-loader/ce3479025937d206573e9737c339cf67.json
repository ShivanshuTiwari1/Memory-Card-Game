{"ast":null,"code":"var _jsxFileName = \"/home/dolor/The Odin Project Files/react-test/task-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport Content from \"./Components/Content\";\nimport DoofusRick from \"./images/DoofusRick.png\";\nimport RickSanchez from \"./images/RickSanchez.jpg\";\nimport MortySmith from \"./images/MortySmith.jpg\";\nimport JerrySmith from \"./images/JerrySmith.jpg\";\nimport SummerSmith from \"./images/SummerSmith.jpg\";\nimport AdjudicatorRick from \"./images/AdjudicatorRick.png\";\nimport PickleRick from \"./images/PickleRick.png\";\nimport EyepatchRick from \"./images/EyepatchRick.jpg\";\nimport RiqIV from \"./images/RiqIV.png\";\nimport FarmerRick from \"./images/FarmerRick.png\";\nimport WaspRick from \"./images/WaspRick.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [score, setScore] = useState(0); //Initial score 0\n\n  const [bestScore, setBestScore] = useState(0);\n  const [cards, setCards] = useState([{\n    id: 1,\n    name: \"Rick Sanchez\",\n    source: RickSanchez\n  }, {\n    id: 2,\n    name: \"Morty Smith\",\n    source: MortySmith\n  }, {\n    id: 3,\n    name: \"Jerry Smith\",\n    source: JerrySmith\n  }, {\n    id: 4,\n    name: \"Summer Smith\",\n    source: SummerSmith\n  }, {\n    id: 5,\n    name: \"Doofus Rick\",\n    source: DoofusRick\n  }, {\n    id: 6,\n    name: \"Adjudicator Rick\",\n    source: AdjudicatorRick\n  }, {\n    id: 7,\n    name: \"Pickle Rick\",\n    source: PickleRick\n  }, {\n    id: 8,\n    name: \"Eye Patch Rick\",\n    source: EyepatchRick\n  }, {\n    id: 9,\n    name: \"RiqIV\",\n    source: RiqIV\n  }, {\n    id: 10,\n    name: \"Farmer Rick\",\n    source: FarmerRick\n  }]);\n  const [selections, setSelections] = useState([]);\n\n  function imageClicked(id1) {\n    if (selections.indexOf(id1) !== -1) //You clicked twice, Game resets\n      {\n        if (score > bestScore) //updating bestScore\n          {\n            setBestScore(score);\n          }\n\n        setScore(0); //resetting score\n\n        setSelections(retval => []); //flushing selections\n      } else {\n      setSelections(prevItems => [...prevItems, id1]);\n      setScore(retval => score + 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      score: score,\n      bestScore: bestScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      cards: cards,\n      imageClicked: imageClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"0L6XDFIoeGqn2PGBEk6tOWzxL40=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dolor/The Odin Project Files/react-test/task-app/src/App.js"],"names":["React","useState","Header","Content","DoofusRick","RickSanchez","MortySmith","JerrySmith","SummerSmith","AdjudicatorRick","PickleRick","EyepatchRick","RiqIV","FarmerRick","WaspRick","App","score","setScore","bestScore","setBestScore","cards","setCards","id","name","source","selections","setSelections","imageClicked","id1","indexOf","retval","prevItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport Header from \"./Components/Header\"\nimport Content from \"./Components/Content\"\n\n\nimport DoofusRick from \"./images/DoofusRick.png\"\nimport RickSanchez from \"./images/RickSanchez.jpg\"\nimport MortySmith from \"./images/MortySmith.jpg\"\nimport JerrySmith from \"./images/JerrySmith.jpg\"\nimport SummerSmith from \"./images/SummerSmith.jpg\"\nimport AdjudicatorRick from \"./images/AdjudicatorRick.png\"\nimport PickleRick from \"./images/PickleRick.png\"\nimport EyepatchRick from \"./images/EyepatchRick.jpg\"\nimport RiqIV from \"./images/RiqIV.png\"\nimport FarmerRick from \"./images/FarmerRick.png\"\n\nimport WaspRick from \"./images/WaspRick.png\"\n\n\n\n\n\n\n\n\n\n\nfunction App()\n{\n    const [score, setScore] = useState(0); //Initial score 0\n    const [bestScore, setBestScore] = useState(0);\n    \n    const [cards, setCards] = useState([\n        {\n            id: 1,\n            name: \"Rick Sanchez\",\n            source: RickSanchez,\n        },\n        {\n            id: 2,\n            name: \"Morty Smith\",\n            source: MortySmith,\n        },\n        {\n            id: 3,\n            name: \"Jerry Smith\",\n            source: JerrySmith,\n        },\n        {\n            id: 4,\n            name: \"Summer Smith\",\n            source: SummerSmith,\n        },\n        {\n            id: 5,\n            name: \"Doofus Rick\",\n            source: DoofusRick,\n        },\n        {\n            id: 6,\n            name: \"Adjudicator Rick\",\n            source: AdjudicatorRick,\n        },\n        {\n            id: 7,\n            name: \"Pickle Rick\",\n            source: PickleRick,\n        },\n        {\n            id: 8,\n            name: \"Eye Patch Rick\",\n            source: EyepatchRick,\n        },\n        {\n            id: 9,\n            name: \"RiqIV\",\n            source: RiqIV,\n        },\n        {\n            id: 10,\n            name: \"Farmer Rick\",\n            source: FarmerRick,\n        },\n    ]\n    );\n    const [selections, setSelections] = useState([]);\n    \n    \n    \n    function imageClicked(id1)\n    {\n        if(selections.indexOf(id1) !== -1)  //You clicked twice, Game resets\n        {\n            if(score > bestScore)   //updating bestScore\n            {\n                setBestScore(score);\n            }\n            \n            setScore(0);    //resetting score\n            \n            setSelections(retval => []);    //flushing selections\n        }\n        else\n        {\n            setSelections(prevItems => [...prevItems, id1]);\n            setScore(retval => score+1);\n        }\n    }\n    \n    return(\n        <div>\n            <Header score={score} bestScore={bestScore}/>\n            <hr/>\n            <Content cards = { cards } imageClicked={ imageClicked }/>\n        </div>\n    );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}